name: Release
on:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: master
      - run: zig fmt --check src build.zig

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        release: [release=true, release=false]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: master
      - run: zig build test -D${{ matrix.release }}

  build:
    strategy:
      matrix:
        include:
            - name: linux
              target: native
              strip: strip=false
              release: release=true
            - name: windows
              target: x86_64-windows-gnu
              strip: strip=false
              release: release=true
            - name: linux-debug
              target: native
              strip: strip=false
              release: release=false
            - name: windows-debug
              target: x86_64-windows-gnu
              strip: strip=false
              release: release=false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: master

      - if: matrix.target == 'native'
        run: sudo apt-get update && sudo apt-get install libwebkit2gtk-4.0-dev -y

      - name: zig build -D${{ matrix.strip }} -D${{ matrix.release }} -Dtarget=${{ matrix.target }}
        run: |
          zig build -D${{ matrix.strip }} -D${{ matrix.release }} -Dtarget=${{ matrix.target }}
          ./make-zip.sh metronome-${{ matrix.name }} ${{ matrix.name }}

      - uses: actions/upload-artifact@v3
        with:
          name: metronome-${{ matrix.name }}
          path: metronome-${{ matrix.name }}.zip
          retention-days: 1

  create-release:
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Creating release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls /usr/lib/ || true
          gh release delete nightly --yes || true
          git push origin :nightly || true
          gh release create nightly --prerelease --title "Nightly" --notes " " **/*.zip
